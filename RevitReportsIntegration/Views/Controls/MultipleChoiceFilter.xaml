<!-- Based on MultipleChoiceFilter example from https://github.com/tom-englert/DataGridExtensions/tree/master/DataGridExtensionsSample -->
<Control x:Class="Fohlio.RevitReportsIntegration.Controls.MultipleChoiceFilter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" d:DesignHeight="30" d:DesignWidth="30"
             xmlns:local="clr-namespace:Fohlio.RevitReportsIntegration"
             xmlns:dgx="urn:tom-englert.de/DataGridExtensions"
             x:Name="Control">

    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="IconControl" TargetType="ToggleButton">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Name="border" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </Control.Resources>
    
    <Control.Template>
        <ControlTemplate>
            <Grid>
                <ToggleButton x:Name="ToggleButton" BorderThickness="0" Background="Transparent" Focusable="False"
                               Style="{StaticResource IconControl}">
                    <StackPanel Orientation="Horizontal" Height="13">
                        <TextBlock x:Name="IsFilterActiveMarker" Text="." Margin="0,0,-4,0" Foreground="{Binding ElementName=FilterSymbol, Path=Foreground}" FontWeight="Bold" />
                        <ContentControl x:Name="FilterSymbol" Focusable="False" Content="{StaticResource SearchIcon}" VerticalContentAlignment="Center" />
                    </StackPanel>
                </ToggleButton>
                <Popup d:DataContext="{d:DesignInstance dgx:DataGridFilterColumnControl}" 
                       x:Name="Popup" IsOpen="{Binding Path=IsChecked, ElementName=ToggleButton, Mode=TwoWay}"
                       AllowsTransparency="True" StaysOpen="False" MaxHeight="320">
                    <ListBox x:Name="ListBox" ItemsSource="{Binding SelectableValues}" SelectionMode="Extended" >
                        <!--SelectionChanged="ListBox_SelectionChanged"-->
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <CheckBox DockPanel.Dock="Left" Margin="3,2" Click="CheckBox_Click" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"/>
                                    <TextBlock Margin="3,2" Text="{Binding}" VerticalAlignment="Center"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding ElementName=ContentControl, Path=Filter.ExcludedItems}" Value="{x:Null}">
                    <Setter TargetName="IsFilterActiveMarker" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Control.Template>
</Control>
